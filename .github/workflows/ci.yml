name: CI

on:
    pull_request:
        branches: [ main ]
    push:
        branches: [ main ]
    workflow_dispatch:  # Allow manual triggering

jobs:
    test:
        name: Test Python ${{ matrix.python-version }} on ${{ matrix.os }}
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                os: [ubuntu-latest]
                python-version: ['3.10', '3.11', '3.12']

        steps:
            - name: Checkout code
              uses: actions/checkout@v4
            
            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v5
              with:
                  python-version: ${{ matrix.python-version }}

            - name: Install UV (fast Python package manager)
              run: |
                  curl -LsSf https://astral.sh/uv/install.sh | sh
                  echo "$HOME/.cargo/bin" >> $GITHUB_PATH

            - name: Install dependencies
              run: |
                  uv pip install --system --upgrade pip
                  uv pip install --system ruff pytest pytest-cov pytest-xdist
                  uv pip install --system -e .
            
            - name: Lint with Ruff
              run: |
                  ruff check . --output-format=github
                  ruff format --check .
            
            - name: Run tests with coverage
              run: |
                  pytest \
                      --cov=saber \
                      --cov-report=xml \
                      --cov-report=term-missing \
                      -v \
                      --tb=short \
                      -n auto

            - name: Upload coverage reports
              if: >
                  matrix.python-version == '3.10' &&
                  matrix.os == 'ubuntu-latest'
              uses: codecov/codecov-action@v4
              with:
                  token: ${{ secrets.CODECOV_TOKEN }}
                  fail_ci_if_error: false
                  verbose: true

    security:
        name: Security Scan
        runs-on: ubuntu-latest
        if: github.event_name == 'pull_request'
        
        steps:
            - name: Checkout code
              uses: actions/checkout@v4
            
            - name: Set up Python
              uses: actions/setup-python@v5
              with:
                  python-version: '3.10'
                  cache: 'pip'

            - name: Install security tools
              run: |
                  python -m pip install --upgrade pip
                  pip install safety bandit pip-audit

            - name: Run safety check
              run: |
                  safety check --json || true

            - name: Run bandit security scan
              run: |
                  bandit -r saber/ -f json || true

            - name: Run pip-audit
              run: |
                  pip-audit --format=json || true
